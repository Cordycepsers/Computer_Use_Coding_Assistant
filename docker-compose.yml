version: '3.8'

services:
  coding-assistant:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: computer-use-coding
    environment:
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - DISPLAY=:99
      - WIDTH=1920
      - HEIGHT=1080
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - OTLP_ENDPOINT=jaeger:4317
    ports:
      - "5900:5900"   # VNC
      - "6080:6080"   # noVNC
      - "8080:8080"   # Streamlit
      - "8000:8000"   # FastAPI
      - "8443:8443"   # Code Server
      - "9090:9090"   # Prometheus metrics
    volumes:
      - ./workspace:/home/computeruse/workspace
      - ./projects:/home/computeruse/projects
      - ./logs:/home/computeruse/logs
      - ./app:/home/computeruse/app
    restart: unless-stopped
    networks:
      - coding-network
    depends_on:
      - prometheus
      - loki

  # Monitoring Stack
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9091:9090"
    networks:
      - coding-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    networks:
      - coding-network

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./monitoring/loki-config.yml:/etc/loki/local-config.yaml
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - coding-network

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - ./monitoring/promtail-config.yml:/etc/promtail/config.yml
      - ./logs:/logs:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - coding-network

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "16686:16686"  # Jaeger UI
      - "4317:4317"    # OTLP gRPC
      - "4318:4318"    # OTLP HTTP
    networks:
      - coding-network

networks:
  coding-network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
  loki_data:
